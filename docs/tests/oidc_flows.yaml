Flows:
  OP-ClientAuth-Basic-Dynamic:
    desc: Access token request with client_secret_basic authentication [Basic, Hybrid]
    profile: C,CI,CIT,CT...T
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: client_secret_basic
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
            WARNING:
              token_endpoint_auth_methods_supported: client_secret_basic
          set_op_args:
            authn_method: client_secret_basic
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-ClientAuth-Basic-Static:
    desc: Access token request with client_secret_basic authentication [Basic, Hybrid]
    profile: C,CI,CIT,CT...F
    sequence:
      - Discovery:
          set_discovery_issuer: none
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
            WARNING:
              token_endpoint_auth_methods_supported: client_secret_basic
          set_op_args:
            authn_method: client_secret_basic
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-ClientAuth-PrivateJWT:
    desc: Access token request with private_key_jwt authentication [Extra]
    profile: C,CI,CT,CIT....s.+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - AsyncAuthn:
          set_response_where: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: private_key_jwt
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
              WARNING:
                token_endpoint_auth_methods_supported: private_key_jwt
          set_op_args:
              authn_method: private_key_jwt
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse]
  OP-ClientAuth-SecretJWT:
    desc: Access token request with client_secret_jwt authentication [Extra]
    profile: C,CI,CT,CIT....s.+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - AsyncAuthn:
          set_response_where: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: client_secret_jwt
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
              WARNING:
                token_endpoint_auth_methods_supported: client_secret_jwt
          set_op_args:
            authn_method: client_secret_jwt
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-ClientAuth-SecretPost-Dynamic:
    desc: Access token request with client_secret_post authentication [Basic, Hybrid]
    profile: C,CI,CIT,CT...T
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: client_secret_post
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
            WARNING:
              token_endpoint_auth_methods_supported: client_secret_post
          set_op_args:
            authn_method: client_secret_post
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-ClientAuth-SecretPost-Static:
    desc: Access token request with client_secret_post authentication [Basic, Hybrid]
    profile: C,CI,CIT,CT...F
    sequence:
      - Discovery:
          set_discovery_issuer: none
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
              WARNING:
                token_endpoint_auth_methods_supported: client_secret_post
          set_op_args:
            authn_method: client_secret_post
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Discovery-Config:
    desc: Publishes openid-configuration discovery information [Config, Dynamic]
    mti:
      Dynamic: MUST
    profile: .T.
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      check-http-response: none
  OP-Discovery-JWKs:
    desc: Keys in OP JWKs well formed [Config, Dynamic]
    mti:
      Dynamic: MUST
    profile: ..T.
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      check-http-response: none
      verify-base64url:
        err_status: 3
  OP-Discovery-WebFinger:
    desc: Can discover identifiers using URL syntax [Dynamic]
    profile: ..T...+
    sequence:
      - Webfinger:
          set_principal:
            param: webfinger_url
    assert: none
  OP-Discovery-WebFinger-Email:
    desc: Can discover identifiers using e-mail syntax [Dynamic]
    profile: ..T...+
    sequence:
      - Webfinger:
          set_principal:
            param: webfinger_email
    assert: none
  OP-Discovery-claims_supported:
    desc: Verify that claims_supported is published [Config, Dynamic]
    mti:
      Dynamic: SHOULD
    profile: ..T.
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      check-http-response: none
      providerinfo-has-claims_supported: none
  OP-Discovery-jwks_uri:
    desc: Verify that jwks_uri is published [Config, Dynamic]
    mti:
      Dynamic: SHOULD
    profile: ..T..s
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      bare-keys: none
      check-http-response: none
      providerinfo-has-jwks_uri: none
  OP-IDToken-ES256:
    desc: Asymmetric ID Token signature with ES256 [Extra]
    profile: '...T.s.+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            id_token_signed_response_alg: ES256
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      verify-idtoken-is-signed:
        alg: ES256
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-IDToken-HS256:
    desc: Symmetric ID Token signature with HS256 [Extra]
    profile: '...T.s.+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            id_token_signed_response_alg: HS256
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      verify-idtoken-is-signed:
        alg: HS256
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-IDToken-RS256:
    desc: Asymmetric ID Token signature with RS256 [Dynamic]
    mti:
      all: MUST
    profile: ..T.s
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            id_token_signed_response_alg: RS256
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      verify-idtoken-is-signed:
        alg: RS256
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-IDToken-SigEnc:
    desc: Signed and encrypted ID Token [Extra]
    profile: '...T.se.+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            id_token_encrypted_response_alg: RSA1_5
            id_token_encrypted_response_enc: A128CBC-HS256,
            id_token_signed_response_alg: RS256
          check_support:
            ERROR:
              id_token_encryption_alg_values_supported: RSA1_5
              id_token_encryption_enc_values_supported: A128CBC-HS256
              id_token_signing_alg_values_supported: RS256
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      signed-encrypted-idtoken:
        enc_alg: RSA1_5
        enc_enc: A128CBC-HS256
        sign_alg: RS256
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-IDToken-Signature:
    desc: Does the OP sign the ID Token and with what [Basic, Implicit, Hybrid]
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      is-idtoken-signed: {alg: RS256}
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-IDToken-at_hash:
    desc: ID Token has at_hash when ID Token and Access Token returned from Authorization
      Endpoint [Implicit, Hybrid]
    mti:
      all: MUST
    profile: IT,CIT..
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-IDToken-c_hash:
    desc: ID Token has c_hash when ID Token and Authorization Code returned from Authorization
      Endpoint [Hybrid]
    mti:
      all: MUST
    profile: CI,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-IDToken-kid:
    desc: 'IDToken has kid [Basic, Implicit, Hybrid]'
    mti:
      all: MUST
    profile: '....s'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
      verify-signed-idtoken-has-kid: none
  OP-IDToken-none:
    desc: Unsecured ID Token signature with none [Basic]
    profile: C.T.T.T.n
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            id_token_signed_response_alg: none
            check_support:
              ERROR:
                id_token_signing_alg_values_supported: none
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      unsigned-idtoken: none
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-OAuth-2nd:
    desc: Trying to use authorization code twice should result in an error [Basic, Hybrid]
    mti:
      all: SHOULD
    profile: C,CI,CT,CIT...
    reference: http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-4.1
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - AccessToken
    assert:
      verify-response:
        error:
          - invalid_grant
          - access_denied
        response_cls:
          - ErrorResponse
        status: 2
  OP-OAuth-2nd-30s:
    desc: Trying to use authorization code twice with 30 seconds in between uses must
      result in an error [Basic, Hybrid]
    mti:
      all: SHOULD
    note: A 30 second delay is added between the first and the second use of the authorization
      code.
    profile: C,CI,CT,CIT...
    reference: http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-4.1
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - TimeDelay
      - AccessToken
    assert:
      verify-response:
        error:
          - access_denied
          - invalid_grant
        response_cls:
          - ErrorResponse
        status: 3
  OP-OAuth-2nd-Revokes:
    desc: Trying to use authorization code twice should result in revoking previously
      issued access tokens [Basic, Hybrid]
    mti:
      all: SHOULD
    profile: C,CI,CT,CIT...
    reference: http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-4.1
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - AccessToken:
          set_expect_error:
            error:
              - invalid_grant
              - access_denied
            stop: false
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      verify-response:
        error:
          - access_denied
          - invalid_token
        response_cls:
          - ErrorResponse
        status: 2
  OP-Registration-Dynamic:
    desc: Client registration request [Dynamic]
    mti:
      Dynamic: MUST
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
    assert:
      check-http-response: none
  OP-Registration-Endpoint:
    desc: Verify that registration_endpoint is published [Dynamic]
    mti:
      Dynamic: MUST
    profile: ..T.T
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      verify-op-has-registration-endpoint: none
  OP-Registration-Read:
    desc: Registrationing and then reading the registered client metadata [Extra]
    profile: '...T..+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - ReadRegistration
    assert:
      check-http-response: none
  OP-Registration-Sector-Bad:
    desc: Incorrect registration of sector_identifier_uri [Dynamic]
    profile: ..T
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args: none
          check_support:
            ERROR:
              subject_types_supported: pairwise
              store_sector_redirect_uris:
                other_uris:
                  - 'https://example.com/op'
    assert:
      verify-bad-request-response: none
      verify-error:
        error:
          - invalid_configuration_parameter
          - invalid_client_metadata
  OP-Registration-Sub-Differ:
    desc: Public and pairwise sub values differ [Extra]
    profile: '...T..+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            subject_type: public
          check_support:
            ERROR:
              subject_types_supported: public
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - Registration:
          set_request_args:
            subject_type: pairwise
          check_support:
            ERROR:
              subject_types_supported: pairwise
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      different_sub: none
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Registration-Sub-Pairwise:
    desc: Registration of wish for pairwise sub [Extra]
    profile: '...T..+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            subject_type: pairwise
          check_support:
            ERROR:
              subject_types_supported: pairwise
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Registration-Sub-Public:
    desc: Registration of wish for public sub [Extra]
    profile: '...T..+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            subject_type: public
          check_support:
            ERROR:
              subject_types_supported: public
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Registration-jwks:
    desc: Uses keys registered with jwks value [Dynamic]
    profile: C,CI,CT,CIT...T
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: private_key_jwt
          static_jwk: null
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
            WARNING:
              token_endpoint_auth_methods_supported: private_key_jwt
          set_op_args:
            authn_method: private_key_jwt
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Registration-jwks_uri:
    desc: Uses keys registered with jwks_uri value [Dynamic]
    profile: C,CI,CT,CIT...T
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: private_key_jwt
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          check_support:
            WARNING:
              token_endpoint_auth_methods_supported: private_key_jwt
          set_op_args:
            authn_method: private_key_jwt
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Registration-logo_uri:
    desc: Registration with logo_uri [Dynamic]
    note: This test verifies that an OP displays the RP's logo. To make sure you get
      a fresh login page, you need to remove any cookies you may have received from
      the OP before proceeding.
    profile: '...T'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_uri:
            - logo.uri
            - static/logo.png
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Registration-policy_uri:
    desc: Registration with policy_uri [Dynamic]
    note: This test verifies that an OP displays a link to the RP's policy document.
      To make sure you get a fresh login page, you need to remove any cookies you may
      have received from the OP before proceeding.
    profile: ..T
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_uri:
            - policy_uri
            - static/policy.html
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Registration-tos_uri:
    desc: Registration with tos_uri [Dynamic]
    note: This test verifies that an OP displays a link to the RP's terms of service.
      To make sure you get a fresh login page, you need to remove any cookies you may
      have received from the OP before proceeding.
    profile: '...T'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_uri:
            - tos_uri
            - static/tos.html
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Req-NotUnderstood:
    desc: Request with extra query component [Basic, Implicit, Hybrid]
    mti: {all: MUST}
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            ERROR:
              extra: foobar
    assert:
      verify-authn-response: none
  OP-Req-acr_values:
    desc: Providing acr_values [Basic, Implicit, Hybrid]
    mti:
      all: No err
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          acr_value: null
          set_response_where: none
      - AccessToken
    assert:
      used-acr-value: none
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Req-claims_locales:
    desc: Providing claims_locales [Basic, Implicit, Hybrid]
    mti:
      all: No err
    note: This test requests that claims be returned using the specified locale(s).
      The use of this parameter in the request must not cause an error at the OP.
    profile: '...'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          claims_locales: null
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
      - DisplayUserInfo
    assert:
      check-http-response: none
  OP-Req-id_token_hint:
    desc: Using prompt=none with user hint through id_token_hint [Basic, Implicit, Hybrid]
    mti:
      all: SHOULD
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            prompt: none
          id_token_hint: null
      - AccessToken
    assert:
      same-authn: none
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-Req-login_hint:
    desc: Providing login_hint [Basic, Implicit, Hybrid]
    mti:
      all: No err
    note: Please remove any cookies you may have received from the OpenID Provider before
      proceeding. This test requests that you log in as a specific user, so a fresh
      login page is needed.
    profile: '...'
    result: You should be requested to log in as a predefined user
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          login_hint: null
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Req-max_age=1:
    desc: Requesting ID Token with max_age=1 seconds restriction [Basic, Implicit, Hybrid]
    mti:
      all: MUST
    note: Wait at least one second before proceeding so that the max_age=1 period expires.
      You should be prompted to authenticate or re-authenticate. Please submit a screen
      shot of any authentication user interaction that occurred as part of your certification
      application.
    profile: '...'
    result: The test passed if you were prompted to log in.
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn
      - AccessToken
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            max_age: 1
      - AccessToken
    assert:
      auth_time-check:
        max_age: 1
      claims-check:
        id_token:
          - auth_time
        required: true
      multiple-sign-on:
        status: 2
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-Req-max_age=10000:
    desc: Requesting ID Token with max_age=10000 seconds restriction [Basic, Implicit,
      Hybrid]
    mti:
      all: MUST
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            max_age: 10000
      - AccessToken
    assert:
      auth_time-check:
        max_age: 10000
      claims-check:
        id_token:
          - auth_time
      required: true
      same-authn: none
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-Req-ui_locales:
    desc: Providing ui_locales [Basic, Implicit, Hybrid]
    mti:
      all: No err
    note: Please remove any cookies you may have received from the OpenID Provider before
      proceeding. You need to do this so you can check that the login page is displayed
      using one of the requested locales. The use of this parameter in the request must
      not cause an error at the OP.
    profile: '...'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          ui_locales: null
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Response-Missing:
    desc: Authorization request missing the response_type parameter [Basic, Implicit,
      Hybrid]
    mti: {all: MUST}
    note: 'There are two acceptable outcomes: (1) returning an error response to the
      RP or (2) returning an error message to the End-User. In case (2), you must submit
      a screen shot of the error shown as part of your certification application.'
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - Note
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            response_type:
              - ''
          set_expect_error:
            error:
              - invalid_request
              - unsupported_response_type
    assert:
      verify-error:
        error: [invalid_request, unsupported_response_type]
  OP-Response-code:
    desc: Request with response_type=code [Basic]
    mti:
      all: MUST
    profile: C...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Response-code+id_token:
    desc: Request with response_type=code id_token [Hybrid]
    profile: CI...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      check-idtoken-nonce: none
      verify-authn-response: none
  OP-Response-code+id_token+token:
    desc: Request with response_type=code id_token token [Hybrid]
    profile: CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Response-code+token:
    desc: Request with response_type=code token [Hybrid]
    profile: CT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Response-form_post:
    desc: Request with response_mode=form_post [Extra]
    profile: '....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            response_mode:
              - form_post
    assert:
      verify-authn-response: none
  OP-Response-id_token:
    desc: Request with response_type=id_token [Implicit]
    mti:
      dynamic: MUST
    profile: I...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Response-id_token+token:
    desc: Request with response_type=id_token token [Implicit]
    mti:
      dynamic: MUST
    profile: IT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
    assert:
      verify-authn-response: none
  OP-Rotation-OP-Enc:
    desc: Can rotate OP encryption keys [Extra]
    note: Please make your OP rotate its encryption keys now.If you are not able to
      cause the server to rotate the keys while running the test, then you will have
      to self-assert that your deployment can do OP encryption key rotation as part
      of your certification application.
    profile: ..T..e
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - FetchKeys
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - FetchKeys
    assert:
      check-http-response: none
      new-encryption-keys: none
  OP-Rotation-OP-Sig:
    desc: Can rotate OP signing keys [Dynamic]
    note: Please make your OP rotate its signing keys now. If you are not able to cause
      the server to rotate the keys while running the test, then you will have to self-assert
      that your deployment can do OP signing key rotation as part of your certification
      application.
    profile: ..T.T.s
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - FetchKeys
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - FetchKeys
    assert:
      check-http-response: none
      new-signing-keys: none
  OP-Rotation-RP-Enc:
    desc: Request encrypted UserInfo, change RSA encryption key and request UserInfo
      again [Extra]
    profile: C,CI,CT,CIT...T.se.+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            userinfo_encrypted_response_alg: RSA1_5
            userinfo_encrypted_response_enc: A128CBC-HS256,
            userinfo_signed_response_alg: none
          check_support:
            WARNING:
              userinfo_encryption_alg_values_supported: RSA1_5
              userinfo_encryption_enc_values_supported: A128CBC-HS256,
              userinfo_signing_alg_values_supported: none
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - RotateEncKeys
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
  OP-Rotation-RP-Sig:
    desc: Request access token, change RSA signing key and request another access token
      [Dynamic]
    profile: C,CI,CT,CIT...T.s
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            token_endpoint_auth_method: private_key_jwt
          check_support:
            ERROR:
              token_endpoint_auth_methods_supported: private_key_jwt
      - AsyncAuthn:
          set_response_where: none
      - AccessToken:
          set_op_args:
            authn_method: private_key_jwt
      - RotateSigKeys
      - RefreshAccessToken:
          set_op_args:
            authn_method: private_key_jwt
    assert:
      check-http-response: none
  OP-UserInfo-Body:
    desc: UserInfo Endpoint access with POST and bearer body [Basic, Implicit, Hybrid]
    mti:
      all: MAY
    profile: C,IT,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_body
            method: POST
    assert:
      verify-response:
        response_cls:
          - OpenIDSchema
        status: 2
  OP-UserInfo-Enc:
    desc: Can provide encrypted UserInfo response [Extra]
    profile: C,IT,CI,CT,CIT....e.+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            userinfo_encrypted_response_alg: RSA1_5
            userinfo_encrypted_response_enc: A128CBC-HS256
            userinfo_signed_response_alg: none
          check_support:
            ERROR:
              userinfo_encryption_alg_values_supported: RSA1_5
              userinfo_encryption_enc_values_supported: A128CBC-HS256
              userinfo_signing_alg_values_supported: none
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      encrypted-userinfo: none
      verify-response:
        response_cls:
          - OpenIDSchema
  OP-UserInfo-Endpoint:
    desc: UserInfo Endpoint access with GET and bearer header [Basic, Implicit, Hybrid]
    mti:
      all: SHOULD
    profile: C,IT,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      verify-response:
        response_cls:
          - OpenIDSchema
  OP-UserInfo-Header:
    desc: UserInfo Endpoint access with POST and bearer header [Basic, Implicit, Hybrid]
    profile: C,IT,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: POST
    assert:
      verify-response:
        response_cls:
          - OpenIDSchema
  OP-UserInfo-RS256:
    desc: RP registers userinfo_signed_response_alg to signal that it wants signed UserInfo
      returned [Dynamic]
    mti:
      all: MUST
    profile: C,IT,CI,CT,CIT...T.s
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            userinfo_signed_response_alg: RS256
          check_support:
            WARNING:
              userinfo_signing_alg_values_supported: RS256
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            ctype: jwt
            method: GET
    assert:
      asym-signed-userinfo:
        alg: RS256
      verify-response:
        response_cls:
          - OpenIDSchema
  OP-UserInfo-SigEnc:
    desc: Can provide signed and encrypted UserInfo response [Extra]
    profile: C,IT,CI,CT,CIT....se.+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            userinfo_encrypted_response_alg: RSA1_5
            userinfo_encrypted_response_enc: A128CBC-HS256
            userinfo_signed_response_alg: RS256
          check_support:
            error:
              userinfo_encryption_alg_values_supported: RSA1_5
              userinfo_encryption_enc_values_supported: A128CBC-HS256
              userinfo_signing_alg_values_supported: RS256
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      asym-signed-userinfo:
        alg: RS256
      encrypted-userinfo: none
      verify-response:
        response_cls:
          - OpenIDSchema
  OP-claims-Combined:
    desc: Supports combining claims requested with scope and claims request parameter
      [Extra]
    profile: C,IT,CI,CIT,CT.....+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          check_support:
            WARNING:
              scopes_supported:
                - phone
          set_response_where: none
          set_request_args:
            claims:
              id_token:
                email:
                  essential: true
            scope:
              - openid
              - phone
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-claims:
        id_token:
          email: null
        userinfo:
          phone: null
  OP-claims-IDToken:
    desc: Requesting ID Token with email claim [Extra]
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              id_token:
                email:
                  essential: true
      - AccessToken
    assert:
      verify-claims:
        id_token:
          email: null
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-claims-Split:
    desc: Supports returning different claims in ID Token and UserInfo Endpoint [Extra]
    profile: C,IT,CI,CIT,CT.....+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              id_token:
                email:
                  essential: true
              userinfo:
                name:
                  essential: true
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-claims:
        id_token:
          email: null
        userinfo:
          name: null
  OP-claims-acr-essential:
    desc: Requesting ID Token with essential acr claim [Extra]
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              id_token:
                acr:
                  essential: true
      - AccessToken
    assert:
      verify-claims:
        id_token:
          acr: null
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-claims-acr-voluntary:
    desc: Requesting ID Token with voluntary acr claim [Extra]
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              id_token:
                acr: null
      - AccessToken
    assert:
      verify-claims:
        id_token:
          acr: null
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-claims-acr=1:
    desc: Requesting ID Token with essential specific acr claim [Extra]
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          specific_acr_claims: none
          set_response_where: none
          check_support:
            error:
              acr_values_supported:
                - '1'
      - AccessToken
    assert:
      verify-claims:
        id_token:
          acr: null
      verify-response:
        error:
          - access_denied
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
          - ErrorResponse
  OP-claims-auth_time-essential:
    desc: Requesting ID Token with essential auth_time claim [Extra]
    mti:
      all: MUST
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              id_token:
                auth_time:
                  essential: true
      - AccessToken
    assert:
      verify-claims:
        id_token:
          auth_time: null
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-claims-essential:
    desc: Claims request with essential name claim [Basic, Implicit, Hybrid]
    profile: C,IT,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              userinfo:
                name:
                  essential: true
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-claims:
        userinfo:
          name: null
  OP-claims-essential+voluntary:
    desc: Claims request with essential name and voluntary email and picture claims
      [Extra]
    profile: C,IT,CI,CIT,CT.....+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              userinfo:
                email: null
                name:
                  essential: true
                picture: null
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-claims:
        userinfo:
          email: null
          name: null
          picture: null
  OP-claims-sub:
    desc: Support claims request specifying sub value [Extra]
    note: This test does one login to get a sub claim value. Then it does a fresh login
      using that sub value in a claims request. Please remove any cookies you received
      from the OpenID Provider before proceeding.
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - Cache
      - Note
      - AsyncAuthn:
          sub_claims: none
          set_response_where: none
      - AccessToken
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
      verify-sub-value: none
  OP-claims-voluntary:
    desc: Claims request with voluntary email and picture claims [Extra]
    profile: C,IT,CI,CIT,CT.....+
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            claims:
              userinfo:
                email: null
                picture: null
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-claims:
        userinfo:
          email: null
          picture: null
  OP-display-page:
    desc: Request with display=page [Basic, Implicit, Hybrid]
    mti:
      all: No err
    note: To make sure you get a login page, please remove any cookies you may have
      received from the OpenID Provider before proceeding. You should get a normal user
      agent login page view.
    profile: '...'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_request_args:
            display: page
          check_support:
            WARNING:
              display_values_supported: page
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
  OP-display-popup:
    desc: Request with display=popup [Basic, Implicit, Hybrid]
    mti:
      all: No err
    note: To make sure you get a login page, please remove any cookies you may have
      received from the OpenID Provider before proceeding. You should get a popup user
      agent login window.
    profile: '...'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_request_args:
            display: popup
          check_support:
            WARNING:
              display_values_supported: popup
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
  OP-nonce-NoReq-code:
    desc: Login no nonce, code flow [Basic]
    mti:
      all: MUST
    profile: C...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_request_args:
            nonce: ''
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
  OP-nonce-NoReq-noncode:
    desc: Reject requests without nonce unless using the code flow [Implicit, Hybrid]
    mti:
      all: MUST
    profile: I,IT,CI,CT,CIT...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_request_args:
            nonce: ''
    assert:
      verify-response:
        error:
          - invalid_request
        response_cls:
          - ErrorResponse
  OP-nonce-code:
    desc: ID Token has nonce when requested for code flow [Basic]
    mti: {all: MUST}
    profile: C...
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_request_args:
            nonce: godmorgon
      - AccessToken
    assert:
      verify-nonce: none
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-nonce-noncode:
    desc: Request with nonce, verifies it was returned in ID Token [Implicit, Hybrid]
    mti:
      all: MUST
    profile: I,IT,CI,CT,CIT...
    sequence:
      - Discovery
      - Registration
      - AsyncAuthn
      - AccessToken
    assert:
      check-idtoken-nonce: none
      verify-response:
        response_cls:
          - AccessTokenResponse
          - AuthorizationResponse
  OP-prompt-login:
    desc: Request with prompt=login [Basic, Implicit, Hybrid]
    mti:
      all: MUST
    note: You should be prompted to authenticate or re-authenticate. Please submit a
      screen shot of any authentication user interaction that occurred as part of your
      certification application.
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
      - AccessToken
      - Note
      - AsyncAuthn:
          set_request_args:
            prompt: login
      - AccessToken
    assert:
      multiple-sign-on: none
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-prompt-none-LoggedIn:
    desc: Request with prompt=none when logged in [Basic, Implicit, Hybrid]
    mti:
      all: MUST
    profile: '...'
    result: The test passed if you were not prompted to log in.
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn
      - AccessToken
      - AsyncAuthn:
          set_request_args:
            prompt: none
      - AccessToken
    assert:
      same-authn: none
      verify-response:
        response_cls:
          - AuthorizationResponse
          - AccessTokenResponse
  OP-prompt-none-NotLoggedIn:
    desc: Request with prompt=none when not logged in [Basic, Implicit, Hybrid]
    mti:
      all: MUST
    note: This tests what happens if the authentication request specifies that no interaction
      may occur with the End-User and no recent enough authentication is present to
      enable a silent login. Please remove any cookies you may have received from the
      OpenID Provider before proceeding.
    profile: '...'
    sequence:
      - Note
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            prompt: none
    assert:
      verify-error-response:
        error:
          - login_required
          - interaction_required
          - session_selection_required
          - consent_required
  OP-redirect_uri-Missing:
    desc: Reject request without redirect_uri when multiple registered [Dynamic]
    mti:
      all: MUST
    note: This test should result in the OpenID Provider displaying an error message
      in your user agent. You should ignore the status of this test in the test tool,
      since it will be incomplete. You must submit a screen shot of the error shown
      as part of your certification application.
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          multiple_return_uris: null
      - Note
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            redirect_uri: ''
    assert:
      verify-response:
        response_cls:
          - ErrorResponse
  OP-redirect_uri-MissingOK:
    desc: No redirect_uri in request with one registered [Extra]
    note: This test may result in the OpenID Provider displaying an error message in
      your user agent. You should ignore the status of this test in the test tool if
      this happens, since it will be incomplete. It is also legal for the OP to successfully
      process this authentication request.
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - Note
      - AsyncAuthn:
          set_response_where: none
          set_request_args:
            redirect_uri: ''
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
  OP-redirect_uri-NotReg:
    desc: Sent redirect_uri does not match a registered redirect_uri [Basic, Implicit,
      Hybrid]
    mti:
      all: MUST
    note: This test should result in the OpenID Provider displaying an error message
      in your user agent. You should ignore the status of this test in the test tool,
      since it will be incomplete. You must submit a screen shot of the error shown
      as part of your certification application.
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - Note
      - AsyncAuthn:
          set_response_where: null
          set_request_args:
            redirect_uri: 'https://foo.example.se/authz_cb'
    assert:
      verify-response:
        response_cls:
          - ErrorResponse
  OP-redirect_uri-Query-Added:
    desc: Request with redirect_uri with query component when registered redirect_uri
      has no query component [Dynamic]
    mti:
      all: MUST
    note: This test should result in the OpenID Provider displaying an error message
      in your user agent. You should ignore the status of this test in the test tool,
      since it will be incomplete. You must submit a screen shot of the error shown
      as part of your certification application.
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - Note
      - AsyncAuthn:
          set_response_where: none
          redirect_uris_with_query_component:
            foo: bar
    assert:
      verify-response:
        error: [access_denied]
        response_cls: [ErrorResponse]
  OP-redirect_uri-Query-Mismatch:
    desc: Rejects redirect_uri when query parameter does not match what is registed
      [Dynamic]
    mti:
      all: MUST
    note: This test should result in the OpenID Provider displaying an error message
      in your user agent. You should ignore the status of this test in the test tool,
      since it will be incomplete. You must submit a screen shot of the error shown
      as part of your certification application.
    profile: '...T'
    reference: http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-3.1.2
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          redirect_uris_with_query_component:
            foo: bar
      - Note
      - AsyncAuthn:
          redirect_uris_with_query_component:
            bar: foo
          set_response_where: none
    assert:
      verify-response:
        error:
          - access_denied
        response_cls:
          - ErrorResponse
  OP-redirect_uri-Query-OK:
    desc: Request with a redirect_uri with a query component when a redirect_uri with
      the same query component is registered [Dynamic]
    mti:
      all: MUST
    profile: '...T'
    reference: http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-3.1.2
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          redirect_uris_with_query_component:
            foo: bar
      - AsyncAuthn:
          redirect_uris_with_query_component:
            foo: bar
          set_response_where: none
    assert:
      check-query-part:
        foo: bar
      verify-response:
        response_cls:
          - AuthorizationResponse
  OP-redirect_uri-RegFrag:
    desc: Reject registration where a redirect_uri has a fragment [Dynamic]
    mti:
      all: MUST
    profile: '...T'
    reference: http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-3.1.2
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          redirect_uris_with_fragment:
            foo: bar
    assert:
      verify-response:
        error:
          - invalid_request
          - invalid_configuration_parameter
          - invalid_redirect_uri
        response_cls:
          - ErrorResponse
  OP-request-Sig:
    desc: Support request request parameter with signed request [Extra]
    profile: '....s.+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_signing_alg: RS256
          check_support:
            WARNING:
              request_object_signing_alg_values_supported: RS256
              request_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          set_op_args:
            request_method: request
            request_object_signing_alg: RS256
    assert:
      authn-response-or-error:
        error:
          - request_not_supported
  OP-request-Support:
    desc: Support request request parameter [Extra]
    profile: '.....+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      check-http-response: none
      check-request-parameter-supported-support: none
  OP-request-Unsigned:
    desc: Support request request parameter with unsigned request [Basic, Implicit,
      Hybrid, Dynamic]
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_signing_alg: none
          check_support:
            WARNING:
              request_object_signing_alg_values_supported: none
              request_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          set_op_args:
            request_method: request
            request_object_signing_alg: none
    assert:
      authn-response-or-error:
        error:
          - request_not_supported
  OP-request_uri-Enc:
    desc: Support request_uri request parameter with encrypted request [Extra]
    profile: '...T.se.+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
            request_object_signing_alg: none
          check_support:
            WARNING:
              request_object_encryption_alg_values_supported: RSA1_5
              request_object_encryption_enc_values_supported: A128CBC-HS256,
              request_object_signing_alg_values_supported: none
              request_uri_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          request_in_file: null
          set_op_args:
            local_dir: export
            request_method: file
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
            request_object_signing_alg: none
    assert:
      authn-response-or-error:
        error:
          - request_uri_not_supported
  OP-request_uri-Sig:
    desc: Support request_uri request parameter with signed request [Dynamic]
    profile: '...T.s'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_signing_alg: RS256
          check_support:
            warning:
              request_object_signing_alg_values_supported: RS256
              request_uri_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          request_in_file: null
          set_op_args:
            local_dir: export
            request_method: file
            request_object_signing_alg: RS256
    assert:
      authn-response-or-error:
        error:
          - request_uri_not_supported
  OP-request_uri-SigEnc:
    desc: Support request_uri request parameter with signed and encrypted request [Extra]
    profile: '...T.se.+'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
            request_object_signing_alg: RS256
          check_support:
            WARNING:
              request_object_encryption_alg_values_supported: RSA1_5
              request_object_encryption_enc_values_supported: A128CBC-HS256,
              request_object_signing_alg_values_supported: RS256
              request_uri_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          request_in_file: null
          set_op_args:
            local_dir: export
            request_method: file
            request_object_encryption_alg: RSA1_5
            request_object_encryption_enc: A128CBC-HS256
            request_object_signing_alg: RS256
    assert:
      authn-response-or-error:
        error:
          - request_uri_not_supported
  OP-request_uri-Support:
    desc: Support request_uri request parameter [Dynamic]
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
    assert:
      check-http-response: none
      check-request_uri-parameter-supported-support: none
  OP-request_uri-Unsigned:
    desc: Support request_uri request parameter with unsigned request [Basic, Implicit,
      Hybrid]
    profile: '...F'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_signing_alg: none
          check_support:
            WARNING:
              request_object_signing_alg_values_supported: none
              request_uri_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          request_in_file: null
          set_op_args:
            local_dir: export
            request_method: file
            request_object_signing_alg: none
    assert:
      authn-response-or-error:
        error:
          - request_uri_not_supported
  OP-request_uri-Unsigned-Dynamic:
    desc: Support request_uri request parameter with unsigned request [Basic, Implicit,
      Hybrid, Dynamic]
    profile: '...T'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration:
          set_request_args:
            request_object_signing_alg: none
          check_support:
            ERROR:
              request_object_signing_alg_values_supported: none
              request_uri_parameter_supported: true
      - AsyncAuthn:
          set_response_where: none
          request_in_file: null
          set_op_args:
            local_dir: export
            request_method: file
            request_object_signing_alg: none
    assert:
      verify-response:
        response_cls:
          - AuthorizationResponse
  OP-scope-All:
    desc: Scope requesting all claims [Basic, Implicit, Hybrid]
    mti: No err
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          check_support:
            WARNING:
              scopes_supported: [profile, email, address, phone]
          set_response_where: none
          set_request_args:
            scope:
              - openid
              - profile
              - email
              - address
              - phone
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-response:
        response_cls:
          - OpenIDSchema
          - AuthorizationResponse
      verify-scopes: none
  OP-scope-address:
    desc: Scope requesting address claims [Basic, Implicit, Hybrid]
    mti: No err
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          check_support:
            WARNING:
              scopes_supported:
                - address
          set_response_where: none
          set_request_args:
            scope:
              - openid
              - address
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-response:
        response_cls:
          - OpenIDSchema
          - AuthorizationResponse
      verify-scopes: none
  OP-scope-email:
    desc: Scope requesting email claims [Basic, Implicit, Hybrid]
    mti: No err
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          check_support:
            WARNING:
              scopes_supported:
                - email
          set_response_where: none
          set_request_args:
            scope:
              - openid
              - email
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-response:
        response_cls:
          - OpenIDSchema
          - AuthorizationResponse
      verify-scopes: none
  OP-scope-phone:
    desc: Scope requesting phone claims [Basic, Implicit, Hybrid]
    mti: No err
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          check_support:
            WARNING:
              scopes_supported:
                - phone
          set_response_where: none
          set_request_args:
            scope:
              - openid
              - phone
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-response:
        response_cls:
          - OpenIDSchema
          - AuthorizationResponse
      verify-scopes: none
  OP-scope-profile:
    desc: Scope requesting profile claims [Basic, Implicit, Hybrid]
    mti:
      all: No err
    profile: '...'
    sequence:
      - Webfinger:
          set_webfinger_resource: none
      - Discovery:
          set_discovery_issuer: none
      - Registration
      - AsyncAuthn:
          check_support:
            warning:
              scopes_supported:
                - profile
          set_response_where: none
          set_request_args:
            scope:
              - openid
              - profile
      - AccessToken
      - UserInfo:
          set_op_args:
            authn_method: bearer_header
            method: GET
    assert:
      check-http-response: none
      verify-response:
        response_cls:
          - OpenIDSchema
          - AuthorizationResponse
      verify-scopes: none
